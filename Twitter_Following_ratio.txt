# Twitter Following Project 

# set working directory and  install appropriate packages ----

setwd(dir ="C:\\Users\\cefaw\\Desktop\\Starkist")

#install.packages("rtweet")
library(rtweet)

#install.packages("gender")
library(gender)

# connect to twitter API ----

appname <- "r_tweet_app"

key <- "[Enter Key Here]"

secret <- "[Enter Secret Key Here]"

twitter_token <- create_token(
  app = appname,
  consumer_key = key,
  consumer_secret = secret
)

# find a user and collect their friends into a dataframe ----

user <- get_followers(user="[Enter Username Here]")

user_df <- lookup_users(users = user)


# split the first part of the string (usually a first name) into a single column 

firstnames <- stringr::str_split_fixed(string = user_df$name,pattern = " ",2)

firstnames <- as.data.frame(firstnames)

firstnames$V1 <- as.character(firstnames$V1)

user_df$first <- strsplit(gsub("[^[:alnum:] ]", "", firstnames), " +")[[1]]

first <- as.data.frame(first)

first$first <- as.character(first$first)

first$first <- tolower(first$first)
             
# predict on first name 

gender.predict <- gender(names = first$first,years = c(1932,2012),method = c("ssa","ipums","napp","kantrowitz","genderize","demo"),countries = c("United States", "Canada","United Kingdom", "Germany", "Iceland", "Norway", "Sweden"))

grouped.names <-
  gender.predict %>%
  group_by(tolower(name)) %>%
  summarise(num.of.names = n())

# remove erroneous rows 

filtered_first_names <- 
  gender.predict %>%
  filter(!(name == "the" | name == "pa" | name == "guardian" | name == "mit" | name == "steel" | name == "urban" | name == "washington" | name == "art" | name == "eson" | name == "la" | name == "ny" | name == "wv" | name == "us"))

gender.predict <- gender(names = filtered_first_names$name,years = c(1932,2012),method = c("ssa","ipums","napp","kantrowitz","genderize","demo"),countries = c("United States", "Canada","United Kingdom", "Germany", "Iceland", "Norway", "Sweden"))

names.group <- 
  filtered.gender %>%
  group_by(tolower(name)) %>%
  summarise(num.of.names = n())


# create a table to get percentages 

table(gender.predict$gender)
prop.table(table(gender.predict$gender))

